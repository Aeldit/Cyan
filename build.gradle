plugins {
    id 'fabric-loom' version '1.5-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

archivesBaseName = project.archives_base_name

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/releases" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-entity-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-networking-api-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))

    // CyanLib
    modImplementation "maven.modrinth:cyanlib:${project.cyanlib_version}"
    include "maven.modrinth:cyanlib:${project.cyanlib_version}"

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
    modLocalRuntime "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Gson
    implementation 'com.google.code.gson:gson:2.10.1'
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(17)
}

java {
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!
    projectId = "cyan" // This can be the project ID or the slug. Either will work!
    versionName = "[$project.minecraft_version] Cyan $project.mod_version"
    versionNumber = "$project.mod_version + $project.minecraft_version"
    // You don't need to set this manually. Will fail if Modrinth has this version already
    versionType = "release" // This is the default -- can also be `beta` or `alpha`
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ["1.20.4"] // Must be an array, even with only one version
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.version "fabric-api", "$project.fabric_version" // Creates a new required dependency on Fabric API
        embedded.project "cyanlib"
        required.version "modmenu", "$project.modmenu_version"
    }
    changelog = file("changelogs/latest.md").exists() ? file("changelogs/latest.md").getText() : "No changelog provided"
    syncBodyFrom = rootProject.file("README.md").text
    debugMode = false // Stops version from being published
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

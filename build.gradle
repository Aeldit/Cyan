plugins {
    id "fabric-loom" version "1.6-SNAPSHOT"
    id "maven-publish"
    id "com.modrinth.minotaur" version "2.+"
}

repositories {
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/releases" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    modImplementation(fabricApi.module("fabric-lifecycle-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-entity-events-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-networking-api-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))

    // Dependencies (ModMenu, CyanLib) dependencies
    modImplementation(fabricApi.module("fabric-resource-loader-v0", project.fabric_version))
    modImplementation(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version))
    modImplementation(fabricApi.module("fabric-screen-api-v1", project.fabric_version))

    // CyanLib
    modImplementation "maven.modrinth:cyanlib:${project.cyanlib_version}"
    include "maven.modrinth:cyanlib:${project.cyanlib_version}"

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // Gson
    implementation "com.google.code.gson:gson:2.10.1"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release.set(21)
}

jar {
    from("LICENSE")
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")

    projectId = "cyan"
    versionName = "[$project.minecraft_version] Cyan $project.mod_version"
    versionNumber = "$project.mod_version+$project.minecraft_version"
    versionType = "release"

    uploadFile = remapJar

    gameVersions = ["$project.minecraft_version"]
    loaders = ["fabric"]

    dependencies {
        required.version "fabric-api", "$project.fabric_version"
        embedded.project "cyanlib"
        required.version "modmenu", "$project.modmenu_version"
    }

    changelog = file("changelogs/latest.md").exists() ? file("changelogs/latest.md").getText() : "No changelog provided"
    syncBodyFrom = rootProject.file("README.md").text

    debugMode = false
}
tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
